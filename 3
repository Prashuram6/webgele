// webegle.js
const localVideo = document.getElementById('localVideo');
const remoteVideo = document.getElementById('remoteVideo');
const messageInput = document.getElementById('message-input');
const messagesDiv = document.getElementById('messages');
const sendButton = document.getElementById('send-button');

let pc; // Peer connection
let localStream; // Local user's stream

// Function to initiate video call
async function initiateVideoCall() {
    try {
        localStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
        localVideo.srcObject = localStream;

        // Implement signaling mechanism to establish connection with the other user
        // Initialize WebRTC peer connection
        pc = new RTCPeerConnection();
        // Add local stream to peer connection
        localStream.getTracks().forEach(track => pc.addTrack(track, localStream));

        // Listen for remote stream
        pc.ontrack = (event) => {
            remoteVideo.srcObject = event.streams[0];
        };

        // Create offer
        const offer = await pc.createOffer();
        await pc.setLocalDescription(offer);

        // Send offer to the backend for signaling
        const response = await fetch('/initiate_video_call', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                offer: pc.localDescription,
            })
        });

        const { answer } = await response.json();
        await pc.setRemoteDescription(answer);
    } catch (err) {
        console.error('Error accessing media devices: ', err);
    }
}

// Function to send chat messages
async function sendMessage(message) {
    const messageDiv = document.createElement('div');
    messageDiv.textContent = `You: ${message}`;
    messagesDiv.appendChild(messageDiv);
    
    // Send message to the backend
    await fetch('/send_message', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            message: message,
        })
    });
}

sendButton.addEventListener('click', () => {
    const message = messageInput.value.trim();
    if (message !== '') {
        sendMessage(message);
        messageInput.value = '';
    }
});

// Call the function to initiate video call
initiateVideoCall();
